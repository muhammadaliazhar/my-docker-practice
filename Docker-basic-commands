
** to see all images:                     docker images

** to see all running containers:         docker ps

** to see all stopped containers:         docker ps -a

** to stop a container:                   docker stop containerid      

** to start a container:                  docker start containerid 

** to restart a container:                docker restart containerid 

** to remove a container:                 docker rm container-id

** to remove a running container:         docker rm -f container-id

** to remove a docker image:              docker rmi imageid

** to login your docker hub account:      docker login

** to logout your docker hub account:      docker logout





** to pull a image from docker hub repository:              docker pull imagename

** to create image from Dockerfile:                         docker build -t imagename .   ( or Dockerfile path )

** create container ( -d ) from our image:                  docker run -d --name  containername  imagename   /bin/bash       # -d means our container starts but we are not connected (login to container shell) to that container

** create container ( -it ) from our image:                 docker run -it --name  containername  imagename   /bin/bash      # -it means our container starts and we are inside that container, but when we type exit and move out from the container, then our container stops.

**  to connect with a running container:                    docker exec -it containerid /bin/bash

** to see logs or to troubleshoot issues in a container:    docker log containerid

** to see running processes in a container:                 docker top containerid

** image or volume in use means:                            container is using that image or volume is attached to the container

** to remove all the unused images/volumes:                 docker prune

** to connect a running container we have two optoions:     By using attach command, we login to the main process inside the container, and by using exec command, it creates a new process inside the container and we login to that process
                  1. docker attach containerid
                  2. docker exec containerid 

**  port number  8080:8080 means:                            external traffic port #  :  internal traffic port #  ( outside container port: inside container port)

** to connect with a container shell, first we need to start that container, then we can login to the container shell
